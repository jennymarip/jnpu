$date
2025-09-08T10:11+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module SPU $end
 $var wire 32 ! res_1 $end
 $var wire 32 " res_0 $end
 $var wire 32 # io_left_in_1_data_1 $end
 $var wire 32 $ io_left_in_1_data_0 $end
 $var wire 1 % clock $end
 $var wire 1 & reset $end
 $var wire 2 ' io_index_in_0 $end
 $var wire 2 ( io_index_in_1 $end
 $var wire 32 ) io_up_in_1 $end
 $var wire 32 * io_up_in_0 $end
 $var wire 32 + weight_buffer_0 $end
 $var wire 32 , weight_buffer_1 $end
 $var wire 2 - weight_index_1 $end
 $var wire 2 . weight_index_0 $end
 $var wire 32 / io_down_out_1 $end
 $var wire 32 0 io_down_out_0 $end
 $var wire 32 1 io_weight_in_1 $end
 $var wire 32 2 io_weight_in_0 $end
 $var wire 32 3 io_left_in_0_data_1 $end
 $var wire 32 4 io_left_in_0_data_0 $end
 $var wire 32 5 io_weight_buffer_out_1 $end
 $var wire 32 6 io_weight_buffer_out_0 $end
$upscope $end
$enddefinitions $end
$dumpvars
b00000000000000000000000000000000 +
b00000000000000000000000000000000 *
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 )
b00000000000000000000000000000000 #
b00000000000000000000000000000000 "
b00 .
b00000000000000000000000000000000 $
b00000000000000000000000000000000 !
b00 (
b00 '
b00 -
0%
b00000000000000000000000000000000 6
0&
b00000000000000000000000000000000 3
b00000000000000000000000000000000 2
b00000000000000000000000000000000 5
b00000000000000000000000000000000 4
b00000000000000000000000000000000 /
b00000000000000000000000000000000 1
b00000000000000000000000000000000 0
$end
#0
1&
#1
1%
#6
b00000000000000000000000000000010 1
b00000000000000000000000000000001 2
0%
0&
#11
1%
b00000000000000000000000000000010 5
b00000000000000000000000000000001 6
b00000000000000000000000000000001 +
b00000000000000000000000000000010 ,
#16
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
0%
